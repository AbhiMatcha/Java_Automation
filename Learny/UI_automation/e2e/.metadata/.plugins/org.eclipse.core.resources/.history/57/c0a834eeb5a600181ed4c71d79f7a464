package e2e_Suites;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
//import org.openqa.selenium.firefox.FirefoxBinary;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.firefox.FirefoxOptions;
import java.io.File;
import java.text.SimpleDateFormat;

import org.apache.commons.io.FileUtils;
import testCases.*;

import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.junit.runners.MethodSorters;
import org.junit.FixMethodOrder;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestName;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class PositiveRun extends JUnitHTMLReporter
{	
//	protected static FirefoxDriver driver;
	protected static WebDriver driver;
	@Rule public TestName name = new TestName();
	public static void openBrowser()
	{
/* --------------------------------------------------------------------------------- */
	/* ******This is for fireFox headless****** */

//	System.out.println("running in firefox");
//	FirefoxBinary firefoxBinary = new FirefoxBinary();
//	firefoxBinary.addCommandLineOptions("--headless");
//	/Users/learnyst/Java_Automation/Learny/UI_automation/e2e/Automation_e2e_student
//	System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir")+"/Driver/Mac/geckodriver");
//	FirefoxOptions firefoxOptions = new FirefoxOptions();
//	firefoxOptions.setBinary(firefoxBinary);
//  driver = new FirefoxDriver(firefoxOptions);
	    
    /* ******This is for fireFox headless****** */	
/* --------------------------------------------------------------------------------- */	    
    /* This is for chrome*/
    
    ChromeOptions chromeOptions = new ChromeOptions();
    chromeOptions.addArguments("-start-fullscreen");
    driver = new ChromeDriver(chromeOptions);
    driver.manage().deleteAllCookies();
    
    /* ******This is for chrome****** */
/* --------------------------------------------------------------------------------- */
    /* ******This is for chrome Headless****** */
    
//	System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"/Driver/Mac/chromedriver");
//	ChromeOptions options = new ChromeOptions();
////	options.setHeadless(true);
//	options.addArguments("--headless");
//	driver = new ChromeDriver(options);
	
    /* ******This is for chrome Headless****** */
/* --------------------------------------------------------------------------------- */
}
	public void getscreenshot() throws Exception 
    {		
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss") ;
			Date date = new Date() ;
            File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
            FileUtils.copyFile(scrFile, new File("Reports/screenshot"+ "_"+name.getClass()+"_"+name.getMethodName()+"_"+dateFormat.format(date)+".png"));
    }
//	Thread.currentThread().getStackTrace()
	
	@Test
	public void Testcase01()
	{
		try{
			openBrowser();
			Testcase_01.testcase_01();
			}
		catch(Exception e)
		{
			e.printStackTrace();
			
			try {
				getscreenshot();

				driver.close();
			} catch (Exception e1) {
				// Auto-generated catch block
				e1.printStackTrace();
			}
		}
		finally
		{
			driver.close();
		}
	}
//	@Test
	public void Testcase02()
	{
		try{
			openBrowser();
			Testcase_02.testcase_02();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	
	@Test
	public void Testcase03()
	{
		try{
			openBrowser();
			Testcase_03.testcase_03();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	
	@Test
	public void Testcase05()
	{
		try{
			openBrowser();
			Testcase_05.testcase_05();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}

	@Test
	public void Testcase06()
	{
		try{
			openBrowser();
			Testcase_06.testcase_06();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase07()
	{
		try{
			openBrowser();
			Testcase_07.testcase_07();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase08()
	{
		try{
			openBrowser();
			Testcase_08.testcase_08();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase09()
	{
		try{
			openBrowser();
			Testcase_09.testcase_09();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();
					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase10()
	{
		try{
			openBrowser();
			Testcase_10.testcase_10();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase11()
	{
		try{
			openBrowser();
			Testcase_11.testcase_11();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase12()
	{
		try{
			openBrowser();
			Testcase_12.testcase_12();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase13()
	{
		try{
			openBrowser();
			Testcase_13.testcase_13();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase14()
	{
		try{
			openBrowser();
			Testcase_14.testcase_14();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase30()
	{
		try{
			openBrowser();
			Testcase_30.testcase_30();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	@Test
	public void Testcase31()
	{
		try{
			openBrowser();
			Testcase_31.testcase_31();
			}catch(Exception e)
		{
				e.printStackTrace();
				
				try {
					getscreenshot();

					driver.close();
				} catch (Exception e1) {
					// Auto-generated catch block
					e1.printStackTrace();
				}
			}
			finally
			{
				driver.close();
			}
	}
	
	
	
	@Test
	public void build_Verification_Test() {
		try{		
			openBrowser();
			System.out.println("************************************************************");
			System.out.println(" BVT Suite started");
			System.out.println("************************************************************");	
			Login_flow.loginFlow();
			Logout_flow.logoutFlow();
			Thread.sleep(3000);
			Signup_flow.signupFlow();
			Logout_flow.logoutFlow();
			System.out.println("************************************************************");
			System.out.println(" BVT Suite Completed");
			System.out.println("************************************************************");
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ");
			System.out.println("************************************************************");
			System.out.println("Closing the Browser");
			System.out.println("************************************************************");
		}
		catch(Exception e)
		{
			e.printStackTrace();
			
			try {
				getscreenshot();

				driver.close();
			} catch (Exception e1) {
				// Auto-generated catch block
				e1.printStackTrace();
			}
		}
		finally
		{
			driver.close();
		}
	}
	@Test
	public void sanity_Test() {
			try{
			System.out.println("************************************************************");
			System.out.println(" sanity Suite started");
			System.out.println("************************************************************");			
			
			for(int j=0;j<=2;j++){
	
				switch (j) { 
				
                case 0 :  	
                			openBrowser();	
                			driver.get("http://learnnew.learnyst.com/learn/login");
                			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                			Signup_flow.signupFlow();
                			Mock_test1.fillInTheBlank_Function();
                			driver.close();
                			
                			break;
                				
                case 1 :  
                		
                			openBrowser();	
                			driver.get("http://learnnew.learnyst.com/learn/login");
                			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                			Signup_flow.signupFlow();
							Mock_test2.downloadCertificate();
                			
                			break;
                				
				}	
			}
			System.out.println("************************************************************");
			System.out.println(" Sanity Suite Completed");
			System.out.println("************************************************************");
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX ");
			System.out.println("************************************************************");
			System.out.println("Closing the Browser");
			System.out.println("************************************************************");
			
		}catch(Exception e){
			e.printStackTrace();
			
			try {
				getscreenshot();
				driver.close();
				
			} catch (Exception e1) {
				//  Auto-generated catch block
				e1.printStackTrace();
			}
		}
		finally{
		
			driver.close();
		}
	}
	
}
	










//
//public static void main(String[]args)
//{
//	for(int i=0; i<2;i++)
//	{
//		if(i==0)
//		{	
//			try{
//			System.out.println("running in firefox");
//			FirefoxBinary firefoxBinary = new FirefoxBinary();
//			firefoxBinary.addCommandLineOptions("--headless");
//			//Users/learnyst/Java_Automation/Learny/UI_automation/e2e/Automation_e2e_student
//			System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir")+"/Driver/Mac/geckodriver");
//			FirefoxOptions firefoxOptions = new FirefoxOptions();
//			firefoxOptions.setBinary(firefoxBinary);
//		    driver = new FirefoxDriver(firefoxOptions);
//		    build_Verification_Test();
//		    sanity_Test();
//			}
//			catch(Exception e)
//			{
//				System.out.println("I'm in exception");
//				try {
//					getscreenshot(null);
//				} catch (Exception e1) {
//					// Auto-generated catch block
//					e1.printStackTrace();
//				}
//			}
//		}
//		if(i==1)
//		{	
//			try{
//			System.out.println("running in chrome");
//			System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"/Driver/Mac/chromedriver");
//			ChromeOptions options = new ChromeOptions();
//			options.setHeadless(true);
//			driver = new ChromeDriver(options);
//			build_Verification_Test();
//		    sanity_Test();
//		}
//		catch(Exception e)
//		{
//			System.out.println("I'm in exception");
//			try {
//				getscreenshot(null);
//			} catch (Exception e1) {
//				//  Auto-generated catch block
//				e1.printStackTrace();
//			}
//		}
//		}
//	}
//}






	
	
	
//public static void openBrowser(int i)
//{
//	if(i==0)
//	{	
//		try{
//		
//		System.out.println("running in firefox");
//		FirefoxBinary firefoxBinary = new FirefoxBinary();
//		firefoxBinary.addCommandLineOptions("--headless");
//		//Users/learnyst/Java_Automation/Learny/UI_automation/e2e/Automation_e2e_student
//		System.setProperty("webdriver.gecko.driver", System.getProperty("user.dir")+"/Driver/Mac/geckodriver");
//		FirefoxOptions firefoxOptions = new FirefoxOptions();
//		firefoxOptions.setBinary(firefoxBinary);
//	    driver = new FirefoxDriver(firefoxOptions);
//		}catch(Exception e){
//			e.printStackTrace();
//		}
//	}
//	if(i==1)
//	{	
//		try{
//		System.out.println("running in chrome");
//		System.setProperty("webdriver.chrome.driver", System.getProperty("user.dir")+"/Driver/Mac/chromedriver");
//		ChromeOptions options = new ChromeOptions();
//		options.setHeadless(true);
//		driver = new ChromeDriver(options);
//		}catch(Exception e){
//			e.printStackTrace();
//		}
//	}
//}

//
//@Test
//public void main_Test() 
//{
//	for(int j=0,i=0;j<2;i++,j++)
//	{
//				openBrowser(i);
//			    build_Verification_Test();
//			    sanity_Test();
//	}
//}